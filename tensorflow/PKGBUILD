# Maintainer: George Sterpu <sterpug@tcd.ie>
# PKGBUILD adapted from the official one of Sven-Hendrik Haase

pkgbase=tensorflow
pkgname=(tensorflow-tesla python-tensorflow-tesla)
pkgver=1.10.1
_pkgver=1.10.1
pkgrel=0
pkgdesc="Library for computation using data flow graphs for scalable machine learning"
url="https://www.tensorflow.org/"
license=('APACHE')
arch=('x86_64')
makedepends=('bazel' 'python-numpy' 'python-wheel' 'python-setuptools' 'patch' 'fakeroot' 'gcc7')
optdepends=('tensorboard: Tensorflow visualization toolkit')
source=("https://github.com/tensorflow/tensorflow/archive/v${_pkgver}.tar.gz"
        python37.patch
        protobuf-python37.patch
        protobuf-python37-apply.patch
        21017.patch)
sha512sums=('c066d6caad10def9b3b9c6ca50dd19fa3c9587c878ce149a2a34d6c61085f858c6c9246c419c49bc099efd88d765b2654a463ac8fbef751308c7edecc8b7700f'
            '9e3954c10f9dc11d3b6a6a0162061511eaa81b934debaf4f159f11f60e235e6f2762a216d10927695497e8cf7065855d343cd1573727da3f6355e669ea7c6788'
            'a248658d9466bd3aba854b429ce2c1981c5efff5196dead7b2a8c216b9a6cac781a9f487db5ff4513becc4e6d6cc14c494768a859e1f51a9eea848d8f0178204'
            'fcff7163f6b979018ef4c09dc927ab8dc784b778d8a1bca6d986cc6797fa12f9b5cd902b344fd25c74ac13f71c022f515066d909d9b42e6c3be0ff214f1c7ca8'
            '3125df6b51cc835c22733f187e3d3f85ee7016d3b1c254ee1fae339c493a988c0220ce3fbd473ac54f6983460dd0b0bc38fca2ee8e007d22b4e24c7f2539069f')

prepare() {
  # python3.7 patches from upstream
  patch -d tensorflow-${_pkgver} -Np1 -i ${srcdir}/21017.patch
  patch -d tensorflow-${_pkgver} -Np1 -i ${srcdir}/python37.patch
  patch -d tensorflow-${_pkgver} -Np1 -i ${srcdir}/protobuf-python37-apply.patch
  cp ${srcdir}/protobuf-python37.patch tensorflow-${_pkgver}/third_party/

  cp -r tensorflow-${_pkgver} tensorflow-${_pkgver}-tesla
  # These environment variables influence the behavior of the configure call below.
  export PYTHON_BIN_PATH=/usr/bin/python
  export USE_DEFAULT_PYTHON_LIB_PATH=1
  export TF_NEED_JEMALLOC=1
  export TF_NEED_KAFKA=0
  export TF_NEED_OPENCL_SYCL=0
  export TF_NEED_AWS=0
  export TF_NEED_GCP=0
  export TF_NEED_HDFS=0
  export TF_NEED_S3=0
  export TF_ENABLE_XLA=1
  export TF_NEED_GDR=0
  export TF_NEED_VERBS=0
  export TF_NEED_OPENCL=0
  export TF_NEED_MPI=0
  export TF_NEED_TENSORRT=0
  export TF_SET_ANDROID_WORKSPACE=0
  export TF_DOWNLOAD_CLANG=0
  export TF_NCCL_VERSION=1.3  # configure.py: _DEFAULT_NCCL_VERSION
}

build() {
  cd ${srcdir}/tensorflow-${_pkgver}-tesla
  export CC_OPT_FLAGS="-march=native -O2 -D_GLIBCXX_USE_CXX11_ABI=0"
  export TF_NEED_CUDA=1
  export GCC_HOST_COMPILER_PATH=/usr/bin/gcc-7
  export TF_CUDA_CLANG=0
  # export CLANG_CUDA_COMPILER_PATH=/usr/bin/clang
  export CUDA_TOOLKIT_PATH=/usr/local/cuda
  export TF_CUDA_VERSION=$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')
  export CUDNN_INSTALL_PATH=/usr/local/cuda
  export LD_LIBRARY_PATH=/usr/local/cuda/lib64
  export TF_CUDNN_VERSION=$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' $CUDNN_INSTALL_PATH/include/cudnn.h)
  export TF_CUDA_COMPUTE_CAPABILITIES=7.0
  ./configure
  bazel build --config=opt --config=cuda //tensorflow:libtensorflow.so //tensorflow/tools/pip_package:build_pip_package --action_env="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
  bazel-bin/tensorflow/tools/pip_package/build_pip_package ${srcdir}/tmptftesla
}

package_tensorflow-tesla() {
  depends=()
  conflicts=(tensorflow)
  provides=(tensorflow-tesla)
  pkgdesc="Library for computation using data flow graphs for scalable machine learning (with CUDA and CPU optimizations)"

  cd ${srcdir}/tensorflow-${_pkgver}-tesla

  tensorflow/c/generate-pc.sh --prefix=/usr --version=${pkgver}
  install -Dm644 tensorflow.pc ${pkgdir}/usr/lib/pkgconfig/tensorflow.pc
  install -Dm755 bazel-bin/tensorflow/libtensorflow.so ${pkgdir}/usr/lib/libtensorflow.so
  install -Dm755 bazel-bin/tensorflow/libtensorflow_framework.so ${pkgdir}/usr/lib/libtensorflow_framework.so
  install -Dm644 tensorflow/c/c_api.h ${pkgdir}/usr/include/tensorflow/c/c_api.h
  install -Dm644 LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
}

package_python-tensorflow-tesla() {
  depends=(python-numpy python-protobuf absl-py)
  conflicts=()
  provides=(python-tensorflow-tesla)
  pkgdesc="Library for computation using data flow graphs for scalable machine learning (with CUDA and CPU optimizations)"

  cd ${srcdir}/tensorflow-${_pkgver}-tesla

  WHEEL_PACKAGE=$(find ${srcdir}/tmptftesla -name "tensor*.whl")
  pip install --ignore-installed --upgrade --root $pkgdir/ $WHEEL_PACKAGE --no-dependencies

  # tensorboard has been separated from upstream but they still install it with
  # tensorflow. I don't know what kind of sense that makes but we have to clean
  # it out from this pacakge.
  rm -rf ${pkgdir}/usr/bin/tensorboard

  install -Dm644 LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
}

# vim:set ts=2 sw=2 et:
